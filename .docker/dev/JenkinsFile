def envConfig

pipeline {
    agent any
    // parameters {

    // }
    stages {
        stage('Cleanup') {
            steps {
                echo 'Cleaning up..'
            }
        }
        stage ('Prepare') {
            steps {
                echo 'Preparing..'
                script {
                    envConfig = readJSON file: src/InnovateFuture.Api/appsettings.Local.json
                    println envConfig['DBConnection']
                }
            }
        }
        stage('Build') {
            steps {
                echo 'Building..'
                script {
                    sh 'dotnet restore ./InnovateFuture.sln' // restore nuget packages
                    // build entity framework
                    sh 'dotnet ef database update --project "./src/InnovateFuture.Infrastructure/InnovateFuture.Infrastructure.csproj" --startup-project "./src/InnovateFuture.Api/InnovateFuture.Api.csproj"'
                    dir('src/InnovateFuture.Api/') {
                        sh 'dotnet build "InnovateFuture.Api.csproj" -c Release -o ./app/build'
                        sh 'dotnet publish "InnovateFuture.Api.csproj" -c Release -o ./app/publish'
                    }
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
                script {
                    dir('Server/src/InnovateFuture.Api/') {
                        sh 'dotnet test'
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}